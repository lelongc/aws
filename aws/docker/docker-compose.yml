version: '3.8'

services:
  app:
    build: 
      context: ./app
      dockerfile: Dockerfile.dev
    container_name: app
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
      - PORT=8080
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=appdb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./app:/app
      - /app/node_modules
    depends_on:
      - db
      - redis
    networks:
      - app-network
    command: npm run dev

  db:
    image: postgres:13
    container_name: app-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=appdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network

  redis:
    image: redis:6
    container_name: app-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  localstack:
    image: localstack/localstack:latest
    container_name: app-localstack
    ports:
      - "4566-4599:4566-4599"
    environment:
      - SERVICES=s3,dynamodb,sqs,lambda
      - DEFAULT_REGION=ap-southeast-1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - ./localstack:/docker-entrypoint-initaws.d
      - localstack_data:/tmp/localstack
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  localstack_data:
