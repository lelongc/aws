version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: eyewear-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: eyewear
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - eyewear-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eyewear-backend
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_NAME=eyewear
      - JWT_SECRET=your_jwt_secret_here
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - eyewear-network
    command: >
      sh -c "pnpm install &&
             pnpm run migration:run &&
             pnpm run seed &&
             pnpm run start:dev"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eyewear-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - ./frontend/public:/app/public
    networks:
      - eyewear-network
    command: "pnpm dev"

networks:
  eyewear-network:
    driver: bridge

volumes:
  postgres_data:
